"use strict";(globalThis.webpackChunkbeacon_docs=globalThis.webpackChunkbeacon_docs||[]).push([[4508],{11470:(e,t,n)=>{n.d(t,{A:()=>E});var a=n(96540),i=n(34164),r=n(17559),s=n(23104),o=n(56347),c=n(205),l=n(57485),u=n(31682),d=n(70679);function p(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)(()=>{const e=t??function(e){return p(e).map(({props:{value:e,label:t,attributes:n,default:a}})=>({value:e,label:t,attributes:n,default:a}))}(n);return function(e){const t=(0,u.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function g({value:e,tabValues:t}){return t.some(t=>t.value===e)}function v({queryString:e=!1,groupId:t}){const n=(0,o.W6)(),i=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,l.aZ)(i),(0,a.useCallback)(e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})},[i,n])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,r=h(e),[s,o]=(0,a.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:r})),[l,u]=v({queryString:n,groupId:i}),[p,m]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,i]=(0,d.Dv)(t);return[n,(0,a.useCallback)(e=>{t&&i.set(e)},[t,i])]}({groupId:i}),b=(()=>{const e=l??p;return g({value:e,tabValues:r})?e:null})();(0,c.A)(()=>{b&&o(b)},[b]);return{selectedValue:s,selectValue:(0,a.useCallback)(e=>{if(!g({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),m(e)},[u,m,r]),tabValues:r}}var b=n(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(74848);function A({className:e,block:t,selectedValue:n,selectValue:a,tabValues:r}){const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),l=e=>{const t=e.currentTarget,i=o.indexOf(t),s=r[i].value;s!==n&&(c(t),a(s))},u=e=>{let t=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},e),children:r.map(({value:e,label:t,attributes:a})=>(0,x.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{o.push(e)},onKeyDown:u,onClick:l,...a,className:(0,i.A)("tabs__item",f.tabItem,a?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function T({lazy:e,children:t,selectedValue:n}){const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===n);return e?(0,a.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:r.map((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function j(e){const t=m(e);return(0,x.jsxs)("div",{className:(0,i.A)(r.G.tabs.container,"tabs-container",f.tabList),children:[(0,x.jsx)(A,{...t,...e}),(0,x.jsx)(T,{...t,...e})]})}function E(e){const t=(0,b.A)();return(0,x.jsx)(j,{...e,children:p(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>s});n(96540);var a=n(34164);const i={tabItem:"tabItem_Ymn6"};var r=n(74848);function s({children:e,hidden:t,className:n}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,n),hidden:t,children:e})}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var a=n(96540);const i={},r=a.createContext(i);function s(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:t},e.children)}},68692:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"guides/migration-guide","title":"Migration Guide: Updating to Event Subscription","description":"Since version 4.2.0, it is mandatory to subscribe to ACTIVEACCOUNTSET.","source":"@site/docs/guides/migration-guide.mdx","sourceDirName":"guides","slug":"/guides/migration-guide","permalink":"/guides/migration-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/airgap-it/beacon-docs/edit/main/src/docs/guides/migration-guide.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Bug Reporting","permalink":"/guides/bug-report"},"next":{"title":"Integrate Beacon SDK with Next.js (SSR)","permalink":"/guides/ssr"}}');var i=n(74848),r=n(28453),s=n(11470),o=n(19365);const c={},l="Migration Guide: Updating to Event Subscription",u={},d=[{value:"Why Migrate?",id:"why-migrate",level:2},{value:"Step-by-Step Migration",id:"step-by-step-migration",level:2},{value:"1. Update <code>requestPermissions</code> Usage",id:"1-update-requestpermissions-usage",level:3},{value:"2. Set Up the Event Subscription",id:"2-set-up-the-event-subscription",level:3},{value:"3. Handle the Active Account",id:"3-handle-the-active-account",level:3},{value:"Advanced Example",id:"advanced-example",level:3}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"migration-guide-updating-to-event-subscription",children:"Migration Guide: Updating to Event Subscription"})}),"\n",(0,i.jsx)(t.admonition,{title:"Mandatory Subscription",type:"warning",children:(0,i.jsxs)(t.p,{children:["Since version 4.2.0, it is mandatory to subscribe to ",(0,i.jsx)(t.code,{children:"ACTIVE_ACCOUNT_SET"}),"."]})}),"\n",(0,i.jsxs)(t.p,{children:["This guide outlines the steps to migrate from using ",(0,i.jsx)(t.code,{children:"dAppClient.getActiveAccount()"})," to the new event subscription method with ",(0,i.jsx)(t.code,{children:"BeaconEvent.ACTIVE_ACCOUNT_SET"})," for handling active account changes."]}),"\n",(0,i.jsx)(t.h2,{id:"why-migrate",children:"Why Migrate?"}),"\n",(0,i.jsx)(t.p,{children:"The shift to using the event subscription method is crucial for several reasons:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Real-Time Update"}),": Subscribing to ",(0,i.jsx)(t.code,{children:"BeaconEvent.ACTIVE_ACCOUNT_SET"})," enables your dApp to detect and respond to account changes in real-time, ensuring the application always reflects the current active account."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Improved Reliability"}),": This method prevents scenarios where your dApp might operate with outdated account information, enhancing the overall reliability and user experience."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"step-by-step-migration",children:"Step-by-Step Migration"}),"\n",(0,i.jsxs)(t.h3,{id:"1-update-requestpermissions-usage",children:["1. Update ",(0,i.jsx)(t.code,{children:"requestPermissions"})," Usage"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"requestPermissions()"})," still returns an active account. However, be aware that it might not capture subsequent account changes made in the wallet."]}),"\n",(0,i.jsxs)(s.A,{groupId:"beaconOrTaquitoMigration1",defaultValue:"beacon",values:[{label:"Beacon",value:"beacon"},{label:"Taquito",value:"taquito"}],children:[(0,i.jsx)(o.A,{value:"beacon",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"// Old usage\nconst permissions = await dAppClient.requestPermissions();\n"})})}),(0,i.jsx)(o.A,{value:"taquito",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"// Old usage\nconst permissions = await wallet.client.requestPermissions();\n"})})})]}),"\n",(0,i.jsx)(t.h3,{id:"2-set-up-the-event-subscription",children:"2. Set Up the Event Subscription"}),"\n",(0,i.jsx)(t.p,{children:"Next, implement an event listener for BeaconEvent.ACTIVE_ACCOUNT_SET. This event is triggered whenever there is a change in the active account, allowing your dApp to stay updated."}),"\n",(0,i.jsxs)(s.A,{groupId:"beaconOrTaquitoMigration2",defaultValue:"beacon",values:[{label:"Beacon",value:"beacon"},{label:"Taquito",value:"taquito"}],children:[(0,i.jsx)(o.A,{value:"beacon",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"// New method\ndAppClient.subscribeToEvent(BeaconEvent.ACTIVE_ACCOUNT_SET, (account) => {\n  // An active account has been set, update the dApp UI\n  console.log(`${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `, account);\n});\n"})})}),(0,i.jsx)(o.A,{value:"taquito",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"// New method\nwallet.client.subscribeToEvent(BeaconEvent.ACTIVE_ACCOUNT_SET, (account) => {\n  // An active account has been set, update the dApp UI\n  console.log(`${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `, account);\n});\n"})})})]}),"\n",(0,i.jsx)(t.h3,{id:"3-handle-the-active-account",children:"3. Handle the Active Account"}),"\n",(0,i.jsxs)(t.p,{children:["Adapt your dApp's logic to handle updates from both ",(0,i.jsx)(t.code,{children:"requestPermissions"})," and the event subscription. This ensures your dApp remains synchronized with the current active account."]}),"\n",(0,i.jsx)(t.p,{children:"The end result should look something like this:"}),"\n",(0,i.jsxs)(s.A,{groupId:"beaconOrTaquitoMigration3",defaultValue:"beacon",values:[{label:"Beacon",value:"beacon"},{label:"Taquito",value:"taquito"}],children:[(0,i.jsx)(o.A,{value:"beacon",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:"live",live:!0,children:'// beacon get active account with events\nimport { BeaconEvent, DAppClient } from "@airgap/beacon-sdk";\n\nconst dAppClient = new DAppClient({ name: "Beacon Docs" });\n\n// Listen for all the active account changes\ndAppClient.subscribeToEvent(BeaconEvent.ACTIVE_ACCOUNT_SET, (account) => {\n  // An active account has been set, update the dApp UI\n  console.log(`${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `, account);\n});\n\nconst permissions = await dAppClient.requestPermissions();\n'})})}),(0,i.jsx)(o.A,{value:"taquito",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:"live",live:!0,children:'// taquito permission request\nimport { TezosToolkit } from "@taquito/taquito";\nimport { BeaconWallet } from "@taquito/beacon-wallet";\n\nconst Tezos = new TezosToolkit("https://mainnet.api.tez.ie");\nconst wallet = new BeaconWallet({ name: "Beacon Docs Taquito" });\n\nTezos.setWalletProvider(wallet);\n\n// Listen for all the active account changes\nwallet.client.subscribeToEvent(BeaconEvent.ACTIVE_ACCOUNT_SET, (account) => {\n  // An active account has been set, update the dApp UI\n  console.log(`${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `, account);\n});\n\nconst permissions = await wallet.client.requestPermissions();\n'})})})]}),"\n",(0,i.jsx)(t.h3,{id:"advanced-example",children:"Advanced Example"}),"\n",(0,i.jsxs)(t.p,{children:["If you need to add some custom logic inside the handler, check out our dedicated ",(0,i.jsx)(t.a,{href:"/getting-started/subscribe-to-active-account",children:"advanced example"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);