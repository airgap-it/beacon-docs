"use strict";(globalThis.webpackChunkbeacon_docs=globalThis.webpackChunkbeacon_docs||[]).push([[5191],{11470:(e,n,t)=>{t.d(n,{A:()=>q});var a=t(96540),o=t(34164),s=t(17559),r=t(23104),i=t(56347),c=t(205),l=t(57485),u=t(31682),d=t(70679);function p(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return p(e).map(({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a}))}(t);return function(e){const n=(0,u.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}function g({queryString:e=!1,groupId:n}){const t=(0,i.W6)(),o=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(o),(0,a.useCallback)(e=>{if(!o)return;const n=new URLSearchParams(t.location.search);n.set(o,e),t.replace({...t.location,search:n.toString()})},[o,t])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,s=h(e),[r,i]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s})),[l,u]=g({queryString:t,groupId:o}),[p,v]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,o]=(0,d.Dv)(n);return[t,(0,a.useCallback)(e=>{n&&o.set(e)},[n,o])]}({groupId:o}),b=(()=>{const e=l??p;return m({value:e,tabValues:s})?e:null})();(0,c.A)(()=>{b&&i(b)},[b]);return{selectedValue:r,selectValue:(0,a.useCallback)(e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),v(e)},[u,v,s]),tabValues:s}}var b=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var A=t(74848);function w({className:e,block:n,selectedValue:t,selectValue:a,tabValues:s}){const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),l=e=>{const n=e.currentTarget,o=i.indexOf(n),r=s[o].value;r!==t&&(c(n),a(r))},u=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,A.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:a})=>(0,A.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{i.push(e)},onKeyDown:u,onClick:l,...a,className:(0,o.A)("tabs__item",f.tabItem,a?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function T({lazy:e,children:n,selectedValue:t}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===t);return e?(0,a.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,A.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function x(e){const n=v(e);return(0,A.jsxs)("div",{className:(0,o.A)(s.G.tabs.container,"tabs-container",f.tabList),children:[(0,A.jsx)(w,{...n,...e}),(0,A.jsx)(T,{...n,...e})]})}function q(e){const n=(0,b.A)();return(0,A.jsx)(x,{...e,children:p(e.children)},String(n))}},19365:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var a=t(34164);const o={tabItem:"tabItem_Ymn6"};var s=t(74848);function r({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(o.tabItem,t),hidden:n,children:e})}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var a=t(96540);const o={},s=a.createContext(o);function r(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(s.Provider,{value:n},e.children)}},62871:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"getting-started/first-dapp","title":"First dApp","description":"Installation","source":"@site/docs/getting-started/first-dapp.mdx","sourceDirName":"getting-started","slug":"/getting-started/first-dapp","permalink":"/getting-started/first-dapp","draft":false,"unlisted":false,"editUrl":"https://github.com/airgap-it/beacon-docs/edit/main/src/docs/getting-started/first-dapp.mdx","tags":[],"version":"current","frontMatter":{"title":"First dApp"},"sidebar":"docs","previous":{"title":"Installation","permalink":"/getting-started/installation"},"next":{"title":"Best Practices","permalink":"/getting-started/best-practices"}}');var o=t(74848),s=t(28453),r=t(11470),i=t(19365);const c={title:"First dApp"},l=void 0,u={},d=[{value:"Installation",id:"installation",level:2},{value:"Setup",id:"setup",level:2},{value:"Check",id:"check",level:2},{value:"Operation Request",id:"operation-request",level:2},{value:"Disconnect",id:"disconnect",level:2},{value:"Destroy",id:"destroy",level:2},{value:"User Interaction Best Practice",id:"user-interaction-best-practice",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.p,{children:"Let's get started with your first dApp. You have to install the necessary dependencies."}),"\n",(0,o.jsxs)(r.A,{groupId:"beaconOrTaquito1",defaultValue:"beacon",values:[{label:"Beacon",value:"beacon"},{label:"Taquito",value:"taquito"}],children:[(0,o.jsx)(i.A,{value:"beacon",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install --save @airgap/beacon-sdk\n"})})}),(0,o.jsx)(i.A,{value:"taquito",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install --save @taquito/taquito @taquito/beacon-wallet\n"})})})]}),"\n",(0,o.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsxs)(n.p,{children:["You can then import the ",(0,o.jsx)(n.code,{children:"beacon-sdk"})," package and create a ",(0,o.jsx)(n.code,{children:"DAppClient"})," instance. This instance will be used throughout your dApp to interact with the users wallet.\nOnce created, you can send a permission request to prompt the user to connect to his wallet."]}),"\n",(0,o.jsxs)(r.A,{groupId:"beaconOrTaquito2",defaultValue:"beacon",values:[{label:"Beacon",value:"beacon"},{label:"Taquito",value:"taquito"}],children:[(0,o.jsx)(i.A,{value:"beacon",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:"live",live:!0,children:'// beacon permission request\nimport { BeaconEvent, DAppClient } from "@airgap/beacon-sdk";\n\nconst dAppClient = new DAppClient({ name: "Beacon Docs" });\n\n// Listen for all the active account changes\ndAppClient.subscribeToEvent(BeaconEvent.ACTIVE_ACCOUNT_SET, (account) => {\n  // An active account has been set, update the dApp UI\n  console.log(`${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `, account);\n});\n\ntry {\n  console.log("Requesting permissions...");\n  const permissions = await dAppClient.requestPermissions();\n  console.log("Got permissions:", permissions.address);\n} catch (error) {\n  console.error("Got error:", error);\n}\n'})})}),(0,o.jsx)(i.A,{value:"taquito",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:"live",live:!0,children:'// taquito permission request\nimport { TezosToolkit } from "@taquito/taquito";\nimport { BeaconWallet } from "@taquito/beacon-wallet";\nimport { BeaconEvent } from "@airgap/beacon-sdk";\n\nconst Tezos = new TezosToolkit("https://mainnet.api.tez.ie");\nconst wallet = new BeaconWallet({ name: "Beacon Docs Taquito" });\n\nTezos.setWalletProvider(wallet);\n\n// Listen for all the active account changes\nwallet.client.subscribeToEvent(BeaconEvent.ACTIVE_ACCOUNT_SET, (account) => {\n  // An active account has been set, update the dApp UI\n  console.log(`${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `, account);\n});\n\ntry {\n  console.log("Requesting permissions...");\n  const permissions = await wallet.client.requestPermissions();\n  console.log("Got permissions:", permissions.address);\n} catch (error) {\n  console.error("Got error:", error);\n}\n'})})})]}),"\n",(0,o.jsx)(n.p,{children:"After the connection is successfully established and the user has shared his account, the result will be returned."}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"DAppClient"})," instance should be a singleton. Avoid creating multiple copies of it, which could lead to unexpected behaviour."]})}),"\n",(0,o.jsx)(n.h2,{id:"check",children:"Check"}),"\n",(0,o.jsx)(n.p,{children:"Now let's introduce a check to see if the SDK is already connected to the dApp.\nThis code should be run after the page is loaded to get the users address and show it in your UI.\nIf the following code returns an address, there is no need to send another permission request, unless you want to pair a different account."}),"\n",(0,o.jsxs)(r.A,{groupId:"beaconOrTaquito3",defaultValue:"beacon",values:[{label:"Beacon",value:"beacon"},{label:"Taquito",value:"taquito"}],children:[(0,o.jsx)(i.A,{value:"beacon",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:"live",live:!0,children:'// beacon get active account\nimport { DAppClient } from "@airgap/beacon-sdk";\n\nconst dAppClient = new DAppClient({ name: "Beacon Docs" });\n\n// The following code should always be run during pageload if you want to show if the user is connected.\nconst activeAccount = await dAppClient.getActiveAccount();\nif (activeAccount) {\n  // User already has account connected, everything is ready\n  // You can now do an operation request, sign request, or send another permission request to switch wallet\n  console.log("Already connected:", activeAccount.address);\n  return activeAccount;\n} else {\n  // The user is not connected. A button should be displayed where the user can connect to his wallet.\n  console.error("Not connected!");\n}\n'})})}),(0,o.jsx)(i.A,{value:"taquito",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:"live",live:!0,children:'// taquito get active account\nimport { TezosToolkit } from "@taquito/taquito";\nimport { BeaconWallet } from "@taquito/beacon-wallet";\n\nconst Tezos = new TezosToolkit("https://mainnet.api.tez.ie");\nconst wallet = new BeaconWallet({ name: "Beacon Docs Taquito" });\n\nTezos.setWalletProvider(wallet);\n\n// The following code should always be run during pageload if you want to show if the user is connected.\nconst activeAccount = await wallet.client.getActiveAccount();\nif (activeAccount) {\n  // User already has account connected, everything is ready\n  // You can now do an operation request, sign request, or send another permission request to switch wallet\n  console.log("Already connected:", activeAccount.address);\n  return activeAccount;\n} else {\n  // The user is not connected. A button should be displayed where the user can connect to his wallet.\n  console.error("Not connected!");\n}\n'})})})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"beacon-sdk"})," is now fully set up and ready to receive operation requests."]}),"\n",(0,o.jsx)(n.h2,{id:"operation-request",children:"Operation Request"}),"\n",(0,o.jsx)(n.p,{children:"This code snippet will construct an Operation request.\nIf the user has already granted permissions and is connected, you can directly send them operation requests for signing.\nRemember, each operation request should be constructed carefully, considering the specific action you want the user to authorize, like transferring tokens or interacting with a smart contract."}),"\n",(0,o.jsxs)(r.A,{groupId:"beaconOrTaquito6",defaultValue:"beacon",values:[{label:"Beacon",value:"beacon"},{label:"Taquito",value:"taquito"}],children:[(0,o.jsx)(i.A,{value:"beacon",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:"live",live:!0,children:'// beacon request operation with events\nimport {\n  BeaconEvent,\n  DAppClient,\n  TezosOperationType,\n} from "@airgap/beacon-sdk";\n\nconst dAppClient = new DAppClient({ name: "Beacon Docs" });\n\n// Listen for all the active account changes\ndAppClient.subscribeToEvent(BeaconEvent.ACTIVE_ACCOUNT_SET, async (account) => {\n  // An active account has been set, update the dApp UI\n  console.log(`${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `, account);\n\n  // At this point we are connected to an account.\n  // Let\'s send a simple transaction to the wallet that sends 1 mutez to ourselves.\n  const response = await dAppClient.requestOperation({\n    operationDetails: [\n      {\n        kind: TezosOperationType.TRANSACTION,\n        destination: account.address, // Send to ourselves\n        amount: "1", // Amount in mutez, the smallest unit in Tezos\n      },\n    ],\n  });\n\n  console.log(response);\n});\n\n// Check if we are connected. If not, do a permission request first.\nconst activeAccount = await dAppClient.getActiveAccount();\nif (!activeAccount) {\n  await dAppClient.requestPermissions();\n}\n'})})}),(0,o.jsx)(i.A,{value:"taquito",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:"live",live:!0,children:'// taquito request operation with events\nimport { TezosToolkit } from "@taquito/taquito";\nimport { BeaconWallet } from "@taquito/beacon-wallet";\nimport {\n  BeaconEvent,\n  DAppClient,\n  TezosOperationType,\n} from "@airgap/beacon-sdk";\n\nconst Tezos = new TezosToolkit("https://mainnet.api.tez.ie");\nconst wallet = new BeaconWallet({ name: "Beacon Docs Taquito" });\n\nTezos.setWalletProvider(wallet);\n\n// Listen for all the active account changes\nwallet.client.subscribeToEvent(\n  BeaconEvent.ACTIVE_ACCOUNT_SET,\n  async (account) => {\n    // An active account has been set, update the dApp UI\n    console.log(`${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `, account);\n\n    // At this point we are connected to an account.\n    // Let\'s send a simple transaction to the wallet that sends 1 mutez to ourselves.\n    const response = await wallet.sendOperations([\n      {\n        kind: TezosOperationType.TRANSACTION,\n        destination: account.address, // Send to ourselves\n        amount: "1", // Amount in mutez, the smallest unit in Tezos\n      },\n    ]);\n\n    console.log(response);\n  },\n);\n\n// Check if we are connected. If not, do a permission request first.\nconst activeAccount = await wallet.client.getActiveAccount();\nif (!activeAccount) {\n  await wallet.client.requestPermissions();\n}\n'})})})]}),"\n",(0,o.jsx)(n.h2,{id:"disconnect",children:"Disconnect"}),"\n",(0,o.jsxs)(n.p,{children:["Please refer to our dedicated ",(0,o.jsx)(n.a,{href:"/guides/disconnecting-a-wallet",children:"page"})," on how to disconnect your dApp based on your needs."]}),"\n",(0,o.jsx)(n.h2,{id:"destroy",children:"Destroy"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"destroy"})," should be implemented to ensure proper lifecycle management of ",(0,o.jsx)(n.code,{children:"dAppClient"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["This function is designed to be called as the final action of ",(0,o.jsx)(n.code,{children:"dAppClient"})," when it is no longer needed."]}),"\n",(0,o.jsx)(n.p,{children:"The destroy function is used to clean up resources and remove all Beacon values from storage."}),"\n",(0,o.jsxs)(n.p,{children:["Once this function is executed, the current instance of ",(0,o.jsx)(n.code,{children:"dAppClient"})," becomes unusable."]}),"\n",(0,o.jsxs)(r.A,{groupId:"beaconOrTaquito7",defaultValue:"beacon",values:[{label:"Beacon",value:"beacon"},{label:"Taquito",value:"taquito"}],children:[(0,o.jsx)(i.A,{value:"beacon",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:"live",live:!0,children:'// beacon destroy\nimport { DAppClient } from "@airgap/beacon-sdk";\n\nconst dAppClient = new DAppClient({ name: "Beacon Docs" });\n\ndAppClient\n  .destroy()\n  .then(() => {\n    logger.log("Instance destroyed.");\n  })\n  .catch((err) => logger.log("Error: ", err.message));\n'})})}),(0,o.jsx)(i.A,{value:"taquito",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:"live",live:!0,children:'// taquito destroy\nimport { TezosToolkit } from "@taquito/taquito";\nimport { BeaconWallet } from "@taquito/beacon-wallet";\n\nconst Tezos = new TezosToolkit("https://mainnet.api.tez.ie");\nconst wallet = new BeaconWallet({ name: "Beacon Docs Taquito" });\n\nTezos.setWalletProvider(wallet);\n\ntry {\n  await wallet.disconnect();\n} catch (err: any) {\n  logger.log("Error: ", err.message);\n}\n'})})})]}),"\n",(0,o.jsx)(n.h2,{id:"user-interaction-best-practice",children:"User Interaction Best Practice"}),"\n",(0,o.jsxs)(n.p,{children:["Take a look a the ",(0,o.jsx)(n.a,{href:"/getting-started/best-practices",children:"best practice"})," for recommendations on Beacon user interface components."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);