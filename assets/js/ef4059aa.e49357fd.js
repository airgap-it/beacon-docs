"use strict";(globalThis.webpackChunkbeacon_docs=globalThis.webpackChunkbeacon_docs||[]).push([[5250],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(96540);const i={},o=s.createContext(i);function a(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:t},e.children)}},92982:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"introduction/introduction","title":"Getting Started","description":"Learn About Beacon","source":"@site/docs/introduction/introduction.mdx","sourceDirName":"introduction","slug":"/","permalink":"/","draft":false,"unlisted":false,"editUrl":"https://github.com/airgap-it/beacon-docs/edit/main/src/docs/introduction/introduction.mdx","tags":[],"version":"current","frontMatter":{"title":"Getting Started","slug":"/"},"sidebar":"docs","next":{"title":"Contributing","permalink":"/contributing"}}');var i=n(74848),o=n(28453),a=n(86025);const r={title:"Getting Started",slug:"/"},l=void 0,c={},d=[{value:"Learn About Beacon",id:"learn-about-beacon",level:2},{value:"Design Principles",id:"design-principles",level:3},{value:"Messages",id:"messages",level:3},{value:"Errors",id:"errors",level:3},{value:"Default UI Elements",id:"default-ui-elements",level:3}];function h(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("div",{className:"container padding-horiz--none margin-vert--md",children:(0,i.jsxs)("div",{className:"row row--no-gutters",children:[(0,i.jsx)("div",{className:"col col--3 margin-right--md",children:(0,i.jsx)("a",{href:"/getting-started/first-dapp",children:(0,i.jsx)("img",{alt:"Hello World",src:(0,a.Ay)("/img/hello-world.svg")})})}),(0,i.jsx)("div",{className:"col col--3",children:(0,i.jsx)("a",{href:"/guides/active-account",children:(0,i.jsx)("img",{alt:"Guides",src:(0,a.Ay)("/img/guides.svg")})})})]})}),"\n",(0,i.jsx)(t.h2,{id:"learn-about-beacon",children:"Learn About Beacon"}),"\n",(0,i.jsxs)(t.p,{children:["Beacon is the implementation of the ",(0,i.jsx)(t.a,{href:"https://gitlab.com/tzip/tzip/tree/master/proposals/tzip-10",children:"tzip-10 proposal"}),", which describes an interaction standard between a wallet and a dApp."]}),"\n",(0,i.jsxs)(t.p,{children:["A dApp implementing the ",(0,i.jsx)(t.a,{href:"https://github.com/airgap-it/beacon-sdk",children:"beacon-sdk"})," can build up a channel and send messages over a peer to peer communication layer to a wallet. This allows for a communication for example of a mobile wallet with a desktop application. The requests of the dApp are sent to the wallet, signed and returned to the application. The ",(0,i.jsx)(t.code,{children:"beacon-sdk"})," can also communicate to chrome extensions if compatible ones are installed."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"beacon-sdk"})," should allow developers to integrate this functionality with minimal coding, but still be customizable to support more complex flows."]}),"\n",(0,i.jsx)(t.h3,{id:"design-principles",children:"Design Principles"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"beacon-sdk"})," handles almost everything for you, but is still customizable if needed.\nIt detects whether or not a browser extension is installed, tracks what connections have been established and the accounts that have been shared with the dApp."]}),"\n",(0,i.jsxs)(t.p,{children:["Generally, you only have to initialize a DAppClient instance (see ",(0,i.jsx)(t.a,{href:"/getting-started/simple-example",children:"Getting Started"}),"), the rest should be handled for you.\nRefer to the ",(0,i.jsx)(t.a,{href:"/guides/active-account",children:"guides"})," section for some common use cases."]}),"\n",(0,i.jsx)(t.h3,{id:"messages",children:"Messages"}),"\n",(0,i.jsxs)(t.p,{children:["The messages used in the Beacon communication are defined in the ",(0,i.jsx)(t.a,{href:"https://gitlab.com/tzip/tzip/tree/master/proposals/tzip-10",children:"tzip-10 proposal"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Every message contains a unique, random ID that allows use to match request and response. It also contains the ID of the sender."}),"\n",(0,i.jsx)(t.p,{children:"Some of the messages accept a network as input (default is mainnet). This is used to ask for permissions or broadcast a transaction on another network. This can either be a testnet, or a local development setup."}),"\n",(0,i.jsxs)(t.p,{children:["To see all message types, please refer to the ",(0,i.jsx)(t.a,{href:"https://typedocs.walletbeacon.io/enums/beaconmessagetype.html",children:"typedocs"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"errors",children:"Errors"}),"\n",(0,i.jsxs)(t.p,{children:["The errors used in the Beacon communication are defined in the ",(0,i.jsx)(t.a,{href:"https://gitlab.com/tzip/tzip/tree/master/proposals/tzip-10",children:"tzip-10 proposal"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"If the wallet encounters an error while processing a request, the response will return an error."}),"\n",(0,i.jsxs)(t.p,{children:["To see all error types, please refer to the ",(0,i.jsx)(t.a,{href:"https://typedocs.walletbeacon.io/enums/beaconerrortype.html",children:"typedocs"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"default-ui-elements",children:"Default UI Elements"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"beacon-sdk"})," includes default UI elements for pairing wallets and show the status of a request.\n",(0,i.jsx)(t.strong,{children:"We highly discourage the overwriting of the default UI elements."}),"\nYou can read more details about this in the ",(0,i.jsx)(t.a,{href:"/advanced/ui-elements",children:"UI Elements"})," section."]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);