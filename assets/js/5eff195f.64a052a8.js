"use strict";(globalThis.webpackChunkbeacon_docs=globalThis.webpackChunkbeacon_docs||[]).push([[7386],{26893:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"advanced/flows/p2p-extension","title":"P2P Extension","description":"Init","source":"@site/docs/advanced/flows/p2p-extension.mdx","sourceDirName":"advanced/flows","slug":"/advanced/flows/p2p-extension","permalink":"/advanced/flows/p2p-extension","draft":false,"unlisted":false,"editUrl":"https://github.com/airgap-it/beacon-docs/edit/main/src/docs/advanced/flows/p2p-extension.mdx","tags":[],"version":"current","frontMatter":{"title":"P2P Extension"},"sidebar":"docs","previous":{"title":"P2P Direct","permalink":"/advanced/flows/p2p-direct"},"next":{"title":"Introduction","permalink":"/blockchains/introduction"}}');var o=t(74848),s=t(28453),i=t(61114);const r={title:"P2P Extension"},c=void 0,l={},d=[{value:"Init",id:"init",level:2},{value:"Permission Request",id:"permission-request",level:2},{value:"Operation Request",id:"operation-request",level:2},{value:"Signing Request",id:"signing-request",level:2},{value:"Broadcast Request",id:"broadcast-request",level:2}];function u(e){const n={h2:"h2",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"init",children:"Init"}),"\n",(0,o.jsx)(i.A,{chart:"\nsequenceDiagram\n  Popup->>Background: Get QR Data\n  Background->>Background: Start listening for new connections\n  Background->>Popup: Return QR Data\n  Popup->>Wallet: Show QR Code (publicKey exchange)\n  Wallet->>Wallet: User scans QR code\n  Wallet->>Background: Send own publicKey to dApp, connection established\n  Background->>Popup: Successful connection\n"}),"\n",(0,o.jsx)(i.A,{chart:"\nsequenceDiagram\n  Popup->>Background: Get QR Data\n  Background->>Background: Start listening for new connections\n  Background->>Popup: Return QR Data\n  Popup->>Wallet: Show QR Code (publicKey exchange)\n  Wallet->>Wallet: User scans QR code\n  Wallet->>Background: Send own publicKey to dApp, connection established\n  Background->>Popup: Successful connection\n"}),"\n",(0,o.jsx)(n.h2,{id:"permission-request",children:"Permission Request"}),"\n",(0,o.jsx)(i.A,{chart:"\nsequenceDiagram\n  dApp->>Background: Request\n  Background->>Wallet: Permission Prompt\n  Wallet->>Wallet: User Confirmation\n  Wallet->>Background: Permission Response\n  Background->>dApp: Response\n"}),"\n",(0,o.jsx)(n.h2,{id:"operation-request",children:"Operation Request"}),"\n",(0,o.jsx)(i.A,{chart:"\nsequenceDiagram\n  dApp->>Background: Request\n  Background->>Wallet: Operation Request\n  opt no threshold\n      Wallet->>Wallet: User confirmation\n  end\n  Wallet->>Wallet: Forge Operation\n  Wallet->>Wallet: Sign\n  Wallet->>Wallet: Broadcast\n  Wallet->>Background: Operation Response\n  Background->>dApp: Response\n"}),"\n",(0,o.jsx)(n.h2,{id:"signing-request",children:"Signing Request"}),"\n",(0,o.jsx)(i.A,{chart:"\nsequenceDiagram\n  dApp->>Background: Request\n  Background->>Wallet: Sign Request\n  opt no threshold\n      Wallet->>Wallet: User confirmation\n  end\n  Wallet->>Wallet: Sign\n  Wallet->>Background: Sign Response\n  Background->>dApp: Response\n"}),"\n",(0,o.jsx)(n.h2,{id:"broadcast-request",children:"Broadcast Request"}),"\n",(0,o.jsx)(i.A,{chart:"\nsequenceDiagram\n  dApp->>Background: Request\n  Background->>Wallet: Signing Request\n  Wallet->>Wallet: User confirmation\n  Wallet->>Background: Signing Response\n  Background->>Background: Broadcast\n  Background->>dApp: Response\n"})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},61114:(e,n,t)=>{t.d(n,{A:()=>i});var a=t(96540),o=t(22279),s=t(74848);o.A.initialize({startOnLoad:!0});const i=({chart:e})=>((0,a.useEffect)(()=>{o.A.contentLoaded()},[]),(0,s.jsx)("div",{className:"mermaid",children:e}))}}]);